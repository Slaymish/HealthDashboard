<!doctype html>
<html lang="en" class="scroll-smooth">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Tailwind CDN ‚Äì dark mode uses class strategy -->
  <script>
    tailwind = {}; tailwind.config = { darkMode: 'class' };
  </script>
  <script src="https://cdn.tailwindcss.com?plugins=typography"></script>

  <title>HealthDash</title>

  <!-- theme toggle script -->
  <script>
    (function() {
      const html = document.documentElement;
      const stored = localStorage.getItem('theme');
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      // Determine initial state
      const isDark = stored
        ? (stored === 'dark')
        : prefersDark;
      // Apply it
      if (isDark) html.classList.add('dark');
      else        html.classList.remove('dark');
      console.log('[Theme] initial:', isDark ? 'dark' : 'light');

      // Expose toggle
      window.toggleTheme = () => {
        html.classList.toggle('dark');
        const nowDark = html.classList.contains('dark');
        localStorage.setItem('theme', nowDark ? 'dark' : 'light');
        console.log('[Theme] toggled:', nowDark ? 'dark' : 'light');
      };
    })();
  </script>


  <style>
    :root      { --accent: #14b8a6; }         /* teal-500 for light mode */
    .dark      { --accent: #22d3ee; }         /* cyan-400 for dark mode */
    ::selection{ background: var(--accent); color: #fff; }

   .dark body {
     background-color: #09090b; /* zinc-950 */
     color: #f4f4f5;            /* zinc-100 */
   }

   /* Default state (light mode): light-icon shown, dark-icon hidden */
   .light-icon { display: inline !important; }
   .dark-icon { display: none !important; }

   /* When dark mode is active on html */
   .dark .dark-icon { display: inline !important; }
   .dark .light-icon { display: none !important; }

   /* Explicitly for light mode (when html does NOT have .dark) */
   html:not(.dark) .light-icon { display: inline !important; }
   html:not(.dark) .dark-icon { display: none !important; }

  </style>
</head>

<body class="bg-zinc-100 text-zinc-800 dark:bg-zinc-950 dark:text-zinc-100 min-h-screen flex flex-col">

  <!-- Header -->
  <header class="border-b border-zinc-200 dark:border-zinc-800">
    <div class="mx-auto px-4 sm:px-6 lg:px-8 py-3 flex justify-between items-center">
      <h1 class="text-xl sm:text-2xl font-bold flex items-center gap-2">
        <span class="text-[1.4rem] sm:text-[1.6rem]">ü©∫</span> Health&nbsp;Dashboard
      </h1>
      <button onclick="toggleTheme()"
              class="px-3 py-1.5 sm:py-2 rounded-lg text-sm border border-zinc-300 dark:border-zinc-700
                     hover:bg-zinc-200 dark:hover:bg-zinc-800 transition">
        <span class="light-icon">‚òÄÔ∏è Light</span>
        <span class="dark-icon">üåô Dark</span>
      </button>
    </div>
  </header>

  <main class="flex-1 mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
    {{ block "content" . }}{{ end }}
  </main>

  <footer class="text-center text-xs text-zinc-500 py-4">
    Built with Go ¬∑ HTMX ¬∑ Tailwind
  </footer>

  <script src="https://unpkg.com/htmx.org@1.9.10"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>

  <!-- Custom script: auto-scroll behavior for panels -->
  <script>
    document.body.addEventListener('htmx:afterSwap', (e) => {
      if (e.detail.target.id === 'foodList') {
        // After food list updates, scroll it to bottom
        e.detail.target.scrollTop = e.detail.target.scrollHeight;
      }
    });
    document.addEventListener('DOMContentLoaded', () => {
      const summaryEl = document.getElementById('summary');
      if (summaryEl) {
        // On page load, scroll summary panel so current day is visible
        summaryEl.scrollTop = summaryEl.scrollHeight;
      }
    });
  </script>
</body>
</html>

